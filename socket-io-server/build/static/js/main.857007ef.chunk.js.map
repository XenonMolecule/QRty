{"version":3,"sources":["components/EntryBar.js","components/JoinAlert.js","components/CopyClipboard.js","components/TextCard.js","components/ImageCard.js","layouts/MessengerPage.js","layouts/HomePage.js","components/QRCode.js","components/QRtyNav.js","layouts/JoinRoomPage.js","layouts/InstructionPage.js","App.js","serviceWorker.js","index.js"],"names":["EntryBar","props","useState","text","setText","InputGroup","FormControl","as","aria-label","style","value","onChange","e","target","Append","Button","variant","onClick","send","btnText","JoinAlert","Row","className","Toast","onClose","setShow","show","delay","autohide","Body","CopyClipboard","state","copied","this","onCopy","setState","color","React","Component","TextCard","content","children","split","forEach","val","push","Card","ImageCard","Img","src","img","MessengerPage","startRoom","window","location","pathname","startsWith","slice","socketIOClient","socket","room","messages","setMessages","showJoinAlert","setShowJoinAlert","fileUpload","useRef","addMessage","msg","concat","addImage","url","joinAlert","console","log","useEffect","emit","setTimeout","disconnect","on","removeListener","Container","Navbar","bg","expand","fixed","Col","sm","xs","href","current","click","icon","faImages","hidden","ref","id","type","accept","formData","FormData","image","files","append","fetch","ENDPOINT","method","body","then","blob","json","data","catch","length","result","characters","charsLength","i","charAt","Math","floor","random","makeID","size","QRCode","fgColor","includeMargin","renderAs","level","bgColor","QRtyNav","showPopup","setShowPopup","handleClose","collapseOnSelect","Brand","height","alt","Toggle","aria-controls","Collapse","Nav","Link","Modal","onHide","Header","closeButton","Title","join","Footer","txt0","txt1","txt2","txt3","txt4","txt5","refs","focus","roomCode","Form","Group","controlId","Control","onKeyDown","keyCode","block","InstructionPage","App","page","rel","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"yRAKe,SAASA,EAASC,GAAQ,IAAD,EAEdC,mBAAS,IAFK,mBAE/BC,EAF+B,KAEzBC,EAFyB,KAIpC,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAaC,GAAG,WACHC,aAAW,OACXC,MAAO,CAAC,OAAS,QACjBC,MAASP,EACTQ,SAAY,SAACC,GACVR,EAAQQ,EAAEC,OAAOH,UAEjC,kBAACL,EAAA,EAAWS,OAAZ,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOP,MAAO,CAAC,MAAQ,SAAUQ,QAAW,WACxDhB,EAAMiB,KAAKf,GACXC,EAAQ,MACRH,EAAMkB,W,mBClBX,SAASC,EAAUnB,GAE9B,OACI,oCACI,kBAACoB,EAAA,EAAD,CAAKC,UAAW,0BACZ,kBAACC,EAAA,EAAD,CAAOC,QAAS,kBAAMvB,EAAMwB,SAAQ,IAAQC,KAAMzB,EAAMyB,KAAMC,MAAO,IAAMC,UAAQ,GAC/E,kBAACL,EAAA,EAAMM,KAAP,2B,oECWLC,E,4MAhBbC,MAAQ,CACNC,QAAQ,G,uDAGA,IAAD,OACP,OACE,6BACE,kBAAC,kBAAD,CAAiB7B,KAAO8B,KAAKhC,MAAME,KACjC+B,OAAQ,kBAAM,EAAKC,SAAS,CAACH,QAAQ,MACrC,yCAEDC,KAAKF,MAAMC,OAAS,0BAAMvB,MAAO,CAAC2B,MAAO,QAArB,WAA8C,U,GAZ/CC,IAAMC,WCEnB,SAASC,EAAStC,GAC7B,IAAIuC,EAAU,GAId,OAHAvC,EAAMwC,SAASC,MAAM,MAAMC,SAAQ,SAACC,GAChCJ,EAAQK,KAAK,yBAAKpC,MAAO,CAAC,aAAe,QAASmC,EAAM,UAGxD,kBAACvB,EAAA,EAAD,CAAKC,UAAW,0BACZ,kBAACwB,EAAA,EAAD,CAAMrC,MAAO,CAAC,aAAe,SACzB,kBAACqC,EAAA,EAAKjB,KAAN,KACKW,EACD,kBAAC,EAAD,CAAiBrC,KAAQqC,EAAQ,GAAGvC,MAAMwC,c,2BCV/C,SAASM,EAAU9C,GAC9B,OACI,kBAACoB,EAAA,EAAD,CAAKC,UAAW,0BACZ,kBAACwB,EAAA,EAAD,CAAMrC,MAAO,CAAC,aAAe,SACrB,kBAACqC,EAAA,EAAKE,IAAN,CAAUhC,QAAQ,MAAMiC,IAAKhD,EAAMiD,Q,mBCQxC,SAASC,IACpB,IAAIC,EAAYC,OAAOC,SAASC,SAC5BH,EAAUI,WAAW,YACrBJ,EAAYA,EAAUK,MAAM,IAHI,MAMRvD,mBAASwD,IARxB,mBAEuB,mBAM7BC,EAN6B,aAOdzD,mBAASkD,IAPK,mBAO/BQ,EAP+B,aAQN1D,mBAAS,KARH,mBAQ/B2D,EAR+B,KAQrBC,EARqB,OASM5D,oBAAS,GATf,mBAS7B6D,EAT6B,KASdC,EATc,KAW9BC,EAAaC,iBAAO,MAE1B,SAASC,EAAWC,GAChBN,EAAYD,EAASQ,OACjB,kBAAC9B,EAAD,KAAW6B,KAInB,SAASE,EAASC,GACdT,EAAYD,EAASQ,OAClB,kBAACtB,EAAD,CAAWG,IAAKqB,MAIvB,SAASC,IACLR,GAAiB,GACjBS,QAAQC,IAAI,cAwBhB,OArBAC,qBAAU,WAGN,OAFAhB,EAAOiB,KAAK,YAAahB,GACzBiB,YAAW,WAAOlB,EAAOiB,KAAK,kBAAmBhB,KAAQ,KAClD,kBAAMD,EAAOmB,gBACrB,IAEHH,qBAAU,WAEN,OADAhB,EAAOoB,GAAG,cAAeZ,GAClB,kBAAMR,EAAOqB,eAAe,cAAeb,MACpD,CAACN,IAEHc,qBAAU,WAEN,OADAhB,EAAOoB,GAAG,aAAcT,GACjB,kBAAMX,EAAOqB,eAAe,aAAcV,OAGrDK,qBAAU,WAEN,OADAhB,EAAOoB,GAAG,gBAAiBP,GACpB,kBAAMb,EAAOqB,eAAe,gBAAiBR,OAIpD,oCACI,kBAACS,EAAA,EAAD,KACI,wBAAIxE,MAAO,CAAC,QAAU,OACtB,kBAACW,EAAD,CAAWM,KAAQqC,EAAetC,QAAWuC,IAC5CH,EACD,wBAAIpD,MAAO,CAAC,QAAU,IAAI,UAAY,UACtC,kBAACyE,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAAKC,MAAO,UAClC,kBAACJ,EAAA,EAAD,KACI,kBAAC5D,EAAA,EAAD,CAAKC,UAAW,yBAA0Bb,MAAO,CAAC,MAAQ,SACtD,kBAAC6E,EAAA,EAAD,CAAKC,GAAI,IACT,kBAACD,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,IACZ,kBAACxF,EAAD,CAAUmB,QAAS,OAAQD,KAAM,SAACf,GAC9BgE,EAAWhE,GACXwD,EAAOiB,KAAK,cAAe,CAACzE,KAAMA,EAAMyD,KAAMA,QAGtD,kBAAC0B,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGlE,UAAW,kBAAmBb,MAAO,CAAC,UAAY,MAAO,WAAa,UACrF,4BACI,uBAAGgF,KAAM,IAAKhF,MAAO,CAAC,MAAQ,UAAW,WAAa,QAASQ,QAAS,WACpEgD,EAAWyB,QAAQC,UAEnB,kBAAC,IAAD,CAAiBC,KAAMC,aASnD,2BAAOC,QAAM,EAACC,IAAK9B,EAAY+B,GAAG,aAAaC,KAAK,OAAOC,OAAQ,UAAWvF,SAAU,SAACC,GACrF,GAAIA,EAAEC,OAAOH,MAAO,CAChB,IAAIyF,EAAW,IAAIC,SACfC,EAAQpC,EAAWyB,QAAQY,MAAM,GAErCH,EAASI,OAAO,OAAQF,GAExB,IACIG,MAAMC,yBAAuB,CAACC,OAAQ,OAAQC,KAAMR,IAC/CS,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACFzC,EAASyC,EAAKA,MACdpD,EAAOiB,KAAK,aAAc,CAAC1B,IAAK6D,EAAKA,KAAMnD,KAAMA,OAClDoD,OAAM,SAAApG,GAET,OADI6D,QAAQC,IAAI9D,GACTA,KAEb,MAAMA,GACJ6D,QAAQC,IAAI,4BAA6B9D,SChHlD,SAASuC,IAEpB,OACI,kBAAC8B,EAAA,EAAD,CAAWxE,MAAO,CAAC,cAAc,WAC7B,kBAACY,EAAA,EAAD,CAAKC,UAAU,yBAAyBb,MAAO,CAAC,iBAAkB,cAC9D,gDAEJ,kBAACY,EAAA,EAAD,CAAKC,UAAU,0BACX,6EAEJ,kBAACD,EAAA,EAAD,CAAKC,UAAU,0BACX,kBAACP,EAAA,EAAD,CAAQE,QAAS,WAAOoC,OAAOC,SAAS,SAepD,SAAgB2D,GAIZ,IAHA,IAAIC,EAAS,GACTC,EAAa,iEACbC,EAAcD,EAAWF,OACnBI,EAAI,EAAGA,EAAIJ,EAAQI,IACzBH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAE3D,OAAOF,EAtBoDQ,CAAO,IAAK1G,QAAQ,UAAU2G,KAAK,KAAKlH,MAAS,CAAC,aAAa,OAAQ,iBAAkB,cAA5I,iBAEU,KAEd,kBAACY,EAAA,EAAD,CAAKC,UAAU,0BACX,kBAACP,EAAA,EAAD,CAAQE,QAAS,WAAOoC,OAAOC,SAAS,YAAatC,QAAQ,UAAU2G,KAAK,KAAKlH,MAAS,CAAC,aAAa,OAAQ,iBAAkB,cAAlI,eAEU,KAEd,kBAACY,EAAA,EAAD,CAAKC,UAAU,yBAAyBb,MAAS,CAAC,aAAa,SAC3D,uBAAGgF,KAAK,aAAR,gB,6CChBDmC,MARf,SAAgB3H,GACd,OACE,yBAAKqB,UAAU,UACb,kBAAC,IAAD,CAAIZ,MAAOT,EAAME,KAAM0H,QAAQ,QAAQC,eAAe,EAAMC,SAAS,MAAMC,MAAM,IAAKL,KAAM,IAAKM,QAAQ,YCEhG,SAASC,EAAQjI,GAAQ,IAAD,EAEHC,oBAAS,GAFN,mBAE9BiI,EAF8B,KAEnBC,EAFmB,KAI7BC,EAAc,kBAAMD,GAAa,IAGvC,OACI,oCACI,kBAAClD,EAAA,EAAD,CAAQC,GAAG,QAAQmD,kBAAgB,EAAClD,OAAO,MACvC,kBAACF,EAAA,EAAOqD,MAAR,CAAc9C,KAAK,KACf,yBACIxC,IAAI,gBACJuF,OAAO,KACPlH,UAAU,2BACVmH,IAAI,eAGZ,kBAACvD,EAAA,EAAOwD,OAAR,CAAeC,gBAAc,0BAC7B,kBAACzD,EAAA,EAAO0D,SAAR,CAAiB5C,GAAG,yBAChB,kBAAC6C,EAAA,EAAD,CAAKvH,UAAU,WACf,kBAACuH,EAAA,EAAIC,KAAL,CAAUrD,KAAK,aAAf,SACI,kBAACoD,EAAA,EAAIC,KAAL,CAAUrD,KAAM,SAAWiC,EAAO,IAAlC,iBACA,kBAACmB,EAAA,EAAIC,KAAL,CAAUrD,KAAK,aAAf,gBAEHxF,EAAM2D,KAAO,kBAACiF,EAAA,EAAD,KACV,kBAAC9H,EAAA,EAAD,CAAQC,QAAS,oBAAqBC,QArBvC,kBAAMmH,GAAa,KAqBlB,eACK,OAGjB,kBAACW,EAAA,EAAD,CAAOrH,KAAMyG,EAAWa,OAAQX,GAC5B,kBAACU,EAAA,EAAME,OAAP,CAAcC,aAAW,GACrB,kBAACH,EAAA,EAAMI,MAAP,oBAEJ,kBAACJ,EAAA,EAAMlH,KAAP,KACI,kBAACR,EAAA,EAAD,CAAKC,UAAU,0BACX,kBAAC,EAAD,CAAQnB,KAAQ,GAAKkD,OAAOC,YAEhC,kBAACjC,EAAA,EAAD,CAAKC,UAAU,0BACX,4BAAKrB,EAAM2D,KAAKH,MAAM,GAAGf,MAAM,IAAI0G,KAAK,QAGhD,kBAACL,EAAA,EAAMM,OAAP,KACI,kBAACtI,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASoH,GAArC,YAUpB,SAASX,EAAOT,GAIZ,IAHA,IAAIC,EAAS,GACTC,EAAa,iEACbC,EAAcD,EAAWF,OACnBI,EAAI,EAAGA,EAAIJ,EAAQI,IACzBH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAE3D,OAAOF,ECzDI,SAAS/D,IACpB,IAAMmG,EAAOpF,iBAAO,MACdqF,EAAOrF,iBAAO,MACdsF,EAAOtF,iBAAO,MACduF,EAAOvF,iBAAO,MACdwF,EAAOxF,iBAAO,MACdyF,EAAOzF,iBAAO,MAChB0F,EAAO,CAACN,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,GAE1ChF,qBAAU,WACN2E,EAAK5D,QAAQmE,UACd,IAIH,IAFA,IAAIC,EAAW,GAbqB,WAe3BzC,GACLyC,EAASjH,KAAK,kBAACkH,EAAA,EAAKC,MAAN,CAAYzJ,GAAI+E,IAAK2E,UAAW,UAAY5C,GACtD,kBAAC0C,EAAA,EAAKG,QAAN,CAAcnE,IAAK6D,EAAKvC,GAAI5G,MAAO,CAAC,OAAS,QAAQ,SAAW,OAAO,UAAY,UAAWE,SAAY,SAACC,GACjF,IAAlBA,EAAEC,OAAOH,OACLE,EAAEC,OAAOH,MAAMuG,OAAS,IACxBrG,EAAEC,OAAOH,MAAQE,EAAEC,OAAOH,MAAME,EAAEC,OAAOH,MAAMuG,OAAS,IAEzDI,EAAI,GACHuC,EAAKvC,EAAI,GAAG3B,QAAQmE,SAGpBxC,EAAI,GACJuC,EAAKvC,EAAI,GAAG3B,QAAQmE,SAIhCM,UAAa,SAACvJ,GACO,GAAbA,EAAEwJ,SACE/C,EAAI,IACJzG,EAAEC,OAAOH,MAAQ,GACjBkJ,EAAKvC,EAAE,GAAG3B,QAAQmE,eApB7BxC,EAAI,EAAGA,EAAI,EAAGA,IAAO,EAArBA,GA2BT,OACI,oCACI,kBAACpC,EAAA,EAAD,CAAWxE,MAAO,CAAC,WAAa,WAC5B,kBAACY,EAAA,EAAD,CAAKC,UAAU,yBAAyBb,MAAO,CAAC,iBAAkB,cAC9D,4CAEJ,kBAACY,EAAA,EAAD,CAAKC,UAAU,0BACX,sEAEJ,kBAACD,EAAA,EAAD,CAAKC,UAAU,0BACX,kBAACyI,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK1I,IAAN,KACKyI,GAEL,kBAACC,EAAA,EAAK1I,IAAN,CAAUC,UAAW,0BACjB,kBAACP,EAAA,EAAD,CAAQ4G,KAAM,KAAMlH,MAAO,CAAC,OAAS,QAAS4J,OAAK,EAACpJ,QAAS,WAEzD,IADA,IAAI2C,EAAO,QACHyD,EAAI,EAAGA,EAAI,EAAGA,IAClBzD,GAAQgG,EAAKvC,GAAG3B,QAAQhF,MAET,IAAfkD,EAAKqD,SACL5D,OAAOC,SAAW,IAAMM,KANhC,aC9Db,SAAS0G,IAEpB,OACI,kBAACrF,EAAA,EAAD,CAAWxE,MAAO,CAAC,cAAc,WAC7B,kBAACY,EAAA,EAAD,CAAKC,UAAU,yBAAyBb,MAAO,CAAC,iBAAkB,cAC9D,gDACA,6BAAS,6BAAS,6BAAS,8BAE/B,kBAACY,EAAA,EAAD,CAAKC,UAAU,0BACX,sDAEJ,kBAACD,EAAA,EAAD,CAAKC,UAAU,0BACX,4BACA,2IACA,2GACA,6IACA,+HACA,8IAGJ,kBAACD,EAAA,EAAD,CAAKC,UAAU,0BACX,kBAACP,EAAA,EAAD,CAAQE,QAAS,WAAOoC,OAAOC,SAAS,SAyBpD,SAAgB2D,GAIZ,IAHA,IAAIC,EAAS,GACTC,EAAa,iEACbC,EAAcD,EAAWF,OACnBI,EAAI,EAAGA,EAAIJ,EAAQI,IACzBH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAE3D,OAAOF,EAhCoDQ,CAAO,IAAK1G,QAAQ,UAAU2G,KAAK,KAAKlH,MAAS,CAAC,aAAa,OAAQ,iBAAkB,cAA5I,iBAEU,KAEd,kBAACY,EAAA,EAAD,KACI,mCAEJ,6BAAS,6BACT,kBAACA,EAAA,EAAD,CAAKC,UAAU,0BACX,oDAEJ,kBAACD,EAAA,EAAD,CAAKC,UAAU,0BACf,4BACA,mGACI,6IAGJ,kBAACD,EAAA,EAAD,CAAKC,UAAU,0BACX,kBAACP,EAAA,EAAD,CAAQE,QAAS,WAAOoC,OAAOC,SAAS,YAAatC,QAAQ,UAAU2G,KAAK,KAAKlH,MAAS,CAAC,aAAa,OAAQ,iBAAkB,cAAlI,eAEU,MCVX8J,MA9Bf,WAAgB,IAAD,EACyBrK,oBAAS,GADlC,mBAEPsK,GAFO,UAEA,kBAACrH,EAAD,OACPS,EAAO,GACX,OAAOP,OAAOC,SAASC,UACnB,IAAK,IACDiH,EAAO,kBAAC,EAAD,MACP,MACJ,IAAK,YACDA,EAAO,kBAAC,EAAD,MACP,MACJ,IAAK,YACDA,EAAO,kBAACF,EAAD,MACP,MACJ,QAEQ1G,EADAP,OAAOC,SAASC,SAASC,WAAW,UAC7BH,OAAOC,SAASC,SAASE,MAAM,GAE/BJ,OAAOC,SAASC,SAGnC,OACI,oCACI,kBAAC2E,EAAD,CAAStE,KAAMA,IACd4G,EACD,0BAAM/E,KAAK,iDAAiDgF,IAAI,iBCpBxDC,QACW,cAA7BrH,OAAOC,SAASqH,UAEe,UAA7BtH,OAAOC,SAASqH,UAEhBtH,OAAOC,SAASqH,SAASC,MACvB,2D,OCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxE,MAAK,SAAAyE,GACJA,EAAaC,gBAEdtE,OAAM,SAAAuE,GACL9G,QAAQ8G,MAAMA,EAAMC,a","file":"static/js/main.857007ef.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function EntryBar(props) {\r\n\r\n    let [text, setText] = useState(\"\");\r\n\r\n    return (\r\n        <InputGroup>\r\n            <FormControl as=\"textarea\"\r\n                         aria-label=\"send\"\r\n                         style={{'resize':'none'}}\r\n                         value = {text}\r\n                         onChange = {(e) => {\r\n                            setText(e.target.value);\r\n                        }}/>\r\n            <InputGroup.Append>\r\n                <Button variant=\"info\" style={{'width':'100px'}} onClick = {() => {\r\n                    props.send(text);\r\n                    setText(\"\");\r\n                }}>{props.btnText}</Button>\r\n            </InputGroup.Append>\r\n        </InputGroup>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nexport default function JoinAlert(props) { \r\n\r\n    return (\r\n        <>\r\n            <Row className={\"justify-content-center\"} >\r\n                <Toast onClose={() => props.setShow(false)} show={props.show} delay={3000} autohide>\r\n                    <Toast.Body>New Connection!</Toast.Body>\r\n                </Toast>\r\n            </Row>    \r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n \r\nclass CopyClipboard extends React.Component {\r\n  state = {\r\n    copied: false,\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        <CopyToClipboard text= {this.props.text}\r\n          onCopy={() => this.setState({copied: true})}>\r\n          <button>Copy</button>\r\n        </CopyToClipboard>\r\n        {this.state.copied ? <span style={{color: 'red'}}>Copied.</span> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CopyClipboard;\r\n","import React  from \"react\";\r\n\r\nimport Card from 'react-bootstrap/Card'\r\nimport Row from \"react-bootstrap/Row\";\r\nimport CopyToClipboard from './CopyClipboard.js'\r\n\r\nexport default function TextCard(props) {\r\n    let content = []\r\n    props.children.split(\"\\n\").forEach((val) => {\r\n        content.push(<pre style={{'marginBottom':'0px'}}>{val + \"\\n\"}</pre>)\r\n    })\r\n    return (\r\n        <Row className={'justify-content-center'}>\r\n            <Card style={{'marginBottom':'10px'}}>\r\n                <Card.Body>\r\n                    {content}\r\n                    <CopyToClipboard text = {content[0].props.children}></CopyToClipboard>\r\n                </Card.Body>\r\n            </Card>\r\n        </Row>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport '../styles/imgCard.css'\r\n\r\nexport default function ImageCard(props) {\r\n    return (\r\n        <Row className={'justify-content-center'}>\r\n            <Card style={{'marginBottom':'10px'}}>\r\n                    <Card.Img variant=\"top\" src={props.img}/>\r\n            </Card>\r\n        </Row>\r\n    );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport EntryBar from \"../components/EntryBar\";\r\nimport JoinAlert from \"../components/JoinAlert\";\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport TextCard from \"../components/TextCard\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faImages } from '@fortawesome/free-solid-svg-icons'\r\nimport ImageCard from \"../components/ImageCard\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport '../styles/messenger.css'\r\n\r\nconst ENDPOINT = \"localhost:4001\"   //\"https://qrty-app.herokuapp.com\";\r\n\r\nexport default function MessengerPage() {\r\n    let startRoom = window.location.pathname;\r\n    if (startRoom.startsWith(\"/room/\")) {\r\n        startRoom = startRoom.slice(6);\r\n    }\r\n\r\n    const [socket, setSocket] = useState(socketIOClient(ENDPOINT));\r\n    let [room, setRoom] = useState(startRoom);\r\n    let [messages, setMessages] = useState([]);\r\n    const [showJoinAlert, setShowJoinAlert] = useState(false);\r\n\r\n    const fileUpload = useRef(null);\r\n\r\n    function addMessage(msg) {\r\n        setMessages(messages.concat(\r\n            <TextCard>{msg}</TextCard>\r\n        ));\r\n    }\r\n\r\n    function addImage(url) {\r\n        setMessages(messages.concat(\r\n           <ImageCard img={url}/>\r\n        ));\r\n    }\r\n\r\n    function joinAlert() {\r\n        setShowJoinAlert(true);\r\n        console.log('show alert');\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"join room\", room);\r\n        setTimeout(() => {socket.emit('send join alert', room)}, 500)\r\n        return () => socket.disconnect();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.on('textMessage', addMessage);\r\n        return () => socket.removeListener('textMessage', addMessage)\r\n    },[messages]);\r\n\r\n    useEffect(() => {\r\n        socket.on('imgMessage', addImage);\r\n        return () => socket.removeListener('imgMessage', addImage);\r\n    })\r\n\r\n    useEffect(() => {\r\n        socket.on('newConnection', joinAlert);\r\n        return () => socket.removeListener('newConnection', joinAlert);\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <hr style={{'opacity':'0'}}/>\r\n                <JoinAlert show = {showJoinAlert} setShow = {setShowJoinAlert} />\r\n                {messages}\r\n                <hr style={{'opacity':'0','marginTop':'78px'}}/>\r\n                <Navbar bg=\"light\" expand=\"lg\" fixed={\"bottom\"}>\r\n                    <Container>\r\n                        <Row className={\"justify-content-center\"} style={{'width':'100%'}}>\r\n                            <Col sm={3}/>\r\n                            <Col sm={5} xs={10}>\r\n                                <EntryBar btnText={\"Send\"} send={(text) => {\r\n                                    addMessage(text);\r\n                                    socket.emit(\"textMessage\", {text: text, room: room});\r\n                                }}/>\r\n                            </Col>\r\n                            <Col sm={4} xs={2} className={\"img-upload-icon\"} style={{'marginTop':'8px', 'marginLeft':'-25px'}}>\r\n                                <h1>\r\n                                    <a href={\"#\"} style={{'color':\"#148496\", 'marginLeft':'15px'}} onClick={()=> {\r\n                                        fileUpload.current.click();\r\n                                    }}>\r\n                                        <FontAwesomeIcon icon={faImages}/>\r\n                                    </a>\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Container>\r\n                </Navbar>\r\n            </Container>\r\n            <input hidden ref={fileUpload} id=\"image-file\" type=\"file\" accept={\"image/*\"} onChange={(e)=> {\r\n                if (e.target.value) {\r\n                    let formData = new FormData();\r\n                    let image = fileUpload.current.files[0];\r\n\r\n                    formData.append(\"file\", image);\r\n\r\n                    try {\r\n                        fetch(ENDPOINT + '/uploads', {method: \"POST\", body: formData})\r\n                            .then(blob => blob.json())\r\n                            .then(data => {\r\n                                addImage(data.data);\r\n                                socket.emit(\"imgMessage\", {img: data.data, room: room});\r\n                            }).catch(e => {\r\n                                console.log(e);\r\n                            return e;\r\n                        });\r\n                    } catch(e) {\r\n                        console.log('Error in image upload...:', e);\r\n                    }\r\n                }\r\n            }}/>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nexport default function MessengerPage() {\r\n\r\n    return (\r\n        <Container style={{'font-family':'Oswald'}}>\r\n            <Row className=\"justify-content-center\" style={{'text-transform': 'uppercase'}}>\r\n                <h1>Welcome to QRty</h1>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <p>Easily share content between multiple devices</p>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Button onClick={() => {window.location='/room/' + makeID(6)}} variant=\"primary\" size=\"lg\" style = {{'margin-top':'20px', 'text-transform': 'uppercase'}}>\r\n                    Create a Room\r\n                </Button>{' '}\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Button onClick={() => {window.location=\"joinroom\"}} variant=\"primary\" size=\"lg\" style = {{'margin-top':'40px', 'text-transform': 'uppercase'}}>\r\n                    Join a Room\r\n                </Button>{' '}\r\n            </Row>\r\n            <Row className=\"justify-content-center\" style = {{'margin-top':'40px'}}>\r\n                <a href=\"/infopage\">About QRty</a>\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n    function makeID(length) {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charsLength = characters.length;\r\n        for ( var i = 0; i < length; i++ ) {\r\n            result += characters.charAt(Math.floor(Math.random() * charsLength));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport QR from 'qrcode.react'\r\n\r\nfunction QRCode(props) {\r\n  return (\r\n    <div className=\"QRCode\">\r\n      <QR value={props.text} fgColor=\"black\" includeMargin={true} renderAs=\"svg\" level=\"H\"  size={150} bgColor=\"white\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QRCode;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport QRCode from \"./QRCode\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nexport default function QRtyNav(props) {\r\n\r\n    let [showPopup, setShowPopup] = useState(false);\r\n\r\n    const handleClose = () => setShowPopup(false);\r\n    const handleShow = () => setShowPopup(true);\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"light\" collapseOnSelect expand=\"sm\">\r\n                <Navbar.Brand href=\"/\">\r\n                    <img\r\n                        src=\"/QRtyLogo.png\"\r\n                        height=\"40\"\r\n                        className=\"d-inline-block align-top\"\r\n                        alt=\"QRty logo\"\r\n                    />\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/infopage\">About</Nav.Link>\r\n                        <Nav.Link href={\"/room/\" + makeID(6)}>Create a Room</Nav.Link>\r\n                        <Nav.Link href=\"/joinroom\">Join a Room</Nav.Link>\r\n                    </Nav>\r\n                    {props.room ? <Nav>\r\n                        <Button variant={\"outline-secondary\"} onClick={handleShow}>Add Device</Button>\r\n                    </Nav> : null}\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <Modal show={showPopup} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Device</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row className=\"justify-content-center\">\r\n                        <QRCode text = {\"\" + window.location}></QRCode>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <h2>{props.room.slice(0).split(\"\").join(\" \")}</h2>\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\n// TODO: DON'T REPEAT FUNCTION!!!\r\nfunction makeID(length) {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charsLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n        result += characters.charAt(Math.floor(Math.random() * charsLength));\r\n    }\r\n    return result;\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport QRtyNav from \"../components/QRtyNav\";\r\n\r\nexport default function MessengerPage() {\r\n    const txt0 = useRef(null);\r\n    const txt1 = useRef(null);\r\n    const txt2 = useRef(null);\r\n    const txt3 = useRef(null);\r\n    const txt4 = useRef(null);\r\n    const txt5 = useRef(null);\r\n    let refs = [txt0, txt1, txt2, txt3, txt4, txt5];\r\n\r\n    useEffect(() => {\r\n        txt0.current.focus();\r\n    }, []);\r\n\r\n    let roomCode = [];\r\n\r\n    for (let i = 0; i < 6; i ++) {\r\n        roomCode.push(<Form.Group as={Col} controlId={\"roomID-\" + i}>\r\n            <Form.Control ref={refs[i]} style={{'height':'150px','fontSize':'60px','textAlign':'center'}} onChange = {(e) => {\r\n                if (e.target.value != \"\") {\r\n                    if (e.target.value.length > 1) {\r\n                        e.target.value = e.target.value[e.target.value.length - 1];\r\n                    }\r\n                    if(i < 5) {\r\n                        refs[i + 1].current.focus();\r\n                    }\r\n                } else {\r\n                    if (i > 0) {\r\n                        refs[i - 1].current.focus();\r\n                    }\r\n                }\r\n            }}\r\n            onKeyDown = {(e) => {\r\n                if (e.keyCode == 8) {\r\n                    if (i > 0){\r\n                        e.target.value = \"\";\r\n                        refs[i-1].current.focus();\r\n                    }\r\n                }\r\n            }}/>\r\n        </Form.Group>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container style={{'fontFamily':'Oswald'}}>\r\n                <Row className=\"justify-content-center\" style={{'text-transform': 'uppercase'}}>\r\n                    <h1>Join a Room</h1>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <p>Enter the 6-character room code below:</p>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Form>\r\n                        <Form.Row>\r\n                            {roomCode}\r\n                        </Form.Row>\r\n                        <Form.Row className={\"justify-content-center\"}>\r\n                            <Button size={\"lg\"} style={{\"height\":\"50px\"}} block onClick={()=> {\r\n                                let room = \"room/\";\r\n                                for(let i = 0; i < 6; i ++) {\r\n                                    room += refs[i].current.value;\r\n                                }\r\n                                if (room.length == 11) {\r\n                                    window.location = \"/\" + room;\r\n                                }\r\n                            }}>Join</Button>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nexport default function InstructionPage() {\r\n\r\n    return (\r\n        <Container style={{'font-family':'Oswald'}}>\r\n            <Row className=\"justify-content-center\" style={{'text-transform': 'uppercase'}}>\r\n                <h1>Welcome to QRty!</h1>\r\n                <br></br><br></br><br></br><br></br>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <h4>How to Create a Room:</h4>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <ul>\r\n                <li>When you click the Create a Room button you will have created a private room to store your text and images.</li>\r\n                <li>You can invite friends to your room with the 6 digits at the end of the URL</li>\r\n                <li>If you click the Add Device button in the upper right hand corner, you will see a QR code and your room code </li>\r\n                <li>You can scan this QR code on mobile devices and then view your text and images across platforms</li>\r\n                <li>You can also upload images or text from that new device and it will appear on other devices in the same room</li>\r\n                </ul>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Button onClick={() => {window.location='/room/' + makeID(6)}} variant=\"primary\" size=\"lg\" style = {{'margin-top':'20px', 'text-transform': 'uppercase'}}>\r\n                    Create a Room\r\n                </Button>{' '}\r\n            </Row>\r\n            <Row>\r\n                <p>   </p>\r\n            </Row>\r\n            <br></br><br></br>\r\n            <Row className=\"justify-content-center\">\r\n                <h4>How to Join a Room:</h4>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n            <ul>\r\n            <li>To join a room you will need either the 6-digit code or the QR code</li>\r\n                <li>After clicking the Join a Room button, simply enter the code and you will see live updates across platforms</li>\r\n                </ul>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Button onClick={() => {window.location=\"joinroom\"}} variant=\"primary\" size=\"lg\" style = {{'margin-top':'40px', 'text-transform': 'uppercase'}}>\r\n                    Join a Room\r\n                </Button>{' '}\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n    function makeID(length) {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charsLength = characters.length;\r\n        for ( var i = 0; i < length; i++ ) {\r\n            result += characters.charAt(Math.floor(Math.random() * charsLength));\r\n        }\r\n        return result;\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport MessengerPage from \"./layouts/MessengerPage\";\r\nimport HomePage from \"./layouts/HomePage\";\r\nimport JoinRoomPage from \"./layouts/JoinRoomPage\";\r\nimport InstructionPage from \"./layouts/InstructionPage\";\r\nimport QRtyNav from \"./components/QRtyNav\";\r\n\r\nfunction App() {\r\n    const [loadClient, setLoadClient] = useState(true);\r\n    let page = <MessengerPage/>;\r\n    let room = \"\";\r\n    switch(window.location.pathname) {\r\n        case \"/\" :\r\n            page = <HomePage/>;\r\n            break;\r\n        case \"/joinroom\":\r\n            page = <JoinRoomPage/>;\r\n            break;\r\n        case \"/infopage\":\r\n            page = <InstructionPage/>\r\n            break;\r\n        default:\r\n            if (window.location.pathname.startsWith(\"/room/\")) {\r\n                room = window.location.pathname.slice(6);\r\n            } else {\r\n                room = window.location.pathname;\r\n            }\r\n    }\r\n    return (\r\n        <>\r\n            <QRtyNav room={room}/>\r\n            {page}\r\n            <link href=\"https://fonts.googleapis.com/css?family=Oswald\" rel=\"stylesheet\"/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}