{"version":3,"sources":["components/EntryBar.js","components/CopyClipboard.js","components/TextCard.js","components/ImageCard.js","layouts/MessengerPage.js","layouts/HomePage.js","components/QRCode.js","components/QRtyNav.js","layouts/JoinRoomPage.js","layouts/InstructionPage.js","App.js","serviceWorker.js","index.js"],"names":["EntryBar","props","useState","text","setText","InputGroup","FormControl","as","aria-label","style","value","onChange","e","target","Append","Button","variant","onClick","send","btnText","CopyClipboard","state","copied","this","onCopy","setState","color","React","Component","TextCard","content","children","split","forEach","val","push","Row","className","Card","Body","ImageCard","Img","src","img","ENDPOINT","MessengerPage","startRoom","window","location","pathname","startsWith","slice","socketIOClient","socket","room","messages","setMessages","fileUpload","useRef","addMessage","msg","concat","addImage","url","useEffect","emit","disconnect","on","removeListener","Container","Navbar","bg","expand","fixed","Col","sm","xs","href","current","click","icon","faImages","hidden","ref","id","type","accept","formData","FormData","image","files","append","fetch","method","body","then","blob","json","data","catch","console","log","length","result","characters","charsLength","i","charAt","Math","floor","random","makeID","size","QRCode","fgColor","includeMargin","renderAs","level","bgColor","QRtyNav","showPopup","setShowPopup","handleClose","collapseOnSelect","Brand","height","alt","Toggle","aria-controls","Collapse","Nav","Link","Modal","show","onHide","Header","closeButton","Title","join","Footer","txt0","txt1","txt2","txt3","txt4","txt5","refs","focus","roomCode","Form","Group","controlId","Control","onKeyDown","keyCode","block","InstructionPage","App","page","rel","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"yRAKe,SAASA,EAASC,GAAQ,IAAD,EAEdC,mBAAS,IAFK,mBAE/BC,EAF+B,KAEzBC,EAFyB,KAIpC,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAaC,GAAG,WACHC,aAAW,OACXC,MAAO,CAAC,OAAS,QACjBC,MAASP,EACTQ,SAAY,SAACC,GACVR,EAAQQ,EAAEC,OAAOH,UAEjC,kBAACL,EAAA,EAAWS,OAAZ,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOP,MAAO,CAAC,MAAQ,SAAUQ,QAAW,WACxDhB,EAAMiB,KAAKf,GACXC,EAAQ,MACRH,EAAMkB,W,2ECDXC,E,4MAhBbC,MAAQ,CACNC,QAAQ,G,uDAGA,IAAD,OACP,OACE,6BACE,kBAAC,kBAAD,CAAiBnB,KAAOoB,KAAKtB,MAAME,KACjCqB,OAAQ,kBAAM,EAAKC,SAAS,CAACH,QAAQ,MACrC,yCAEDC,KAAKF,MAAMC,OAAS,0BAAMb,MAAO,CAACiB,MAAO,QAArB,WAA8C,U,GAZ/CC,IAAMC,WCEnB,SAASC,EAAS5B,GAC7B,IAAI6B,EAAU,GAId,OAHA7B,EAAM8B,SAASC,MAAM,MAAMC,SAAQ,SAACC,GAChCJ,EAAQK,KAAK,yBAAK1B,MAAO,CAAC,aAAe,QAASyB,EAAM,UAGxD,kBAACE,EAAA,EAAD,CAAKC,UAAW,0BACZ,kBAACC,EAAA,EAAD,CAAM7B,MAAO,CAAC,aAAe,SACzB,kBAAC6B,EAAA,EAAKC,KAAN,KACKT,EACD,kBAAC,EAAD,CAAiB3B,KAAQ2B,EAAQ,GAAG7B,MAAM8B,c,2BCV/C,SAASS,EAAUvC,GAC9B,OACI,kBAACmC,EAAA,EAAD,CAAKC,UAAW,0BACZ,kBAACC,EAAA,EAAD,CAAM7B,MAAO,CAAC,aAAe,SACrB,kBAAC6B,EAAA,EAAKG,IAAN,CAAUzB,QAAQ,MAAM0B,IAAKzC,EAAM0C,Q,YCKjDC,G,OAAW,kCAEF,SAASC,IACpB,IAAIC,EAAYC,OAAOC,SAASC,SAC5BH,EAAUI,WAAW,YACrBJ,EAAYA,EAAUK,MAAM,IAHI,MAMRjD,mBAASkD,IAAeR,IANhB,mBAM7BS,EAN6B,aAOdnD,mBAAS4C,IAPK,mBAO/BQ,EAP+B,aAQNpD,mBAAS,KARH,mBAQ/BqD,EAR+B,KAQrBC,EARqB,KAU9BC,EAAaC,iBAAO,MAE1B,SAASC,EAAWC,GAChBJ,EAAYD,EAASM,OACjB,kBAAChC,EAAD,KAAW+B,KAInB,SAASE,EAASC,GACdP,EAAYD,EAASM,OAClB,kBAACrB,EAAD,CAAWG,IAAKoB,MAoBvB,OAhBAC,qBAAU,WAGN,OAFAX,EAAOY,KAAK,YAAaX,GAElB,kBAAMD,EAAOa,gBACrB,IAEHF,qBAAU,WAEN,OADAX,EAAOc,GAAG,cAAeR,GAClB,kBAAMN,EAAOe,eAAe,cAAeT,MACpD,CAACJ,IAEHS,qBAAU,WAEN,OADAX,EAAOc,GAAG,aAAcL,GACjB,kBAAMT,EAAOe,eAAe,aAAcN,OAIjD,oCACI,kBAACO,EAAA,EAAD,KACI,wBAAI5D,MAAO,CAAC,QAAU,OACrB8C,EACD,wBAAI9C,MAAO,CAAC,QAAU,IAAI,UAAY,UACtC,kBAAC6D,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAAKC,MAAO,UAClC,kBAACJ,EAAA,EAAD,KACI,kBAACjC,EAAA,EAAD,CAAKC,UAAW,yBAA0B5B,MAAO,CAAC,MAAQ,SACtD,kBAACiE,EAAA,EAAD,CAAKC,GAAI,IACT,kBAACD,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,IACZ,kBAAC5E,EAAD,CAAUmB,QAAS,OAAQD,KAAM,SAACf,GAC9BwD,EAAWxD,GACXkD,EAAOY,KAAK,cAAe,CAAC9D,KAAMA,EAAMmD,KAAMA,QAGtD,kBAACoB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGvC,UAAW,kBAAmB5B,MAAO,CAAC,UAAY,MAAO,WAAa,UACrF,4BACI,uBAAGoE,KAAM,IAAKpE,MAAO,CAAC,MAAQ,UAAW,WAAa,QAASQ,QAAS,WACpEwC,EAAWqB,QAAQC,UAEnB,kBAAC,IAAD,CAAiBC,KAAMC,aASnD,2BAAOC,QAAM,EAACC,IAAK1B,EAAY2B,GAAG,aAAaC,KAAK,OAAOC,OAAQ,UAAW3E,SAAU,SAACC,GACrF,GAAIA,EAAEC,OAAOH,MAAO,CAChB,IAAI6E,EAAW,IAAIC,SACfC,EAAQhC,EAAWqB,QAAQY,MAAM,GAErCH,EAASI,OAAO,OAAQF,GAExB,IACIG,MAAMhD,EAAW,WAAY,CAACiD,OAAQ,OAAQC,KAAMP,IAC/CQ,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACFpC,EAASoC,EAAKA,MACd7C,EAAOY,KAAK,aAAc,CAACtB,IAAKuD,EAAKA,KAAM5C,KAAMA,OAClD6C,OAAM,SAAAvF,GAET,OADIwF,QAAQC,IAAIzF,GACTA,KAEb,MAAMA,GACJwF,QAAQC,IAAI,4BAA6BzF,SCnGlD,SAASiC,IAEpB,OACI,kBAACwB,EAAA,EAAD,CAAW5D,MAAO,CAAC,cAAc,WAC7B,kBAAC2B,EAAA,EAAD,CAAKC,UAAU,yBAAyB5B,MAAO,CAAC,iBAAkB,cAC9D,gDAEJ,kBAAC2B,EAAA,EAAD,CAAKC,UAAU,0BACX,6EAEJ,kBAACD,EAAA,EAAD,CAAKC,UAAU,0BACX,kBAACtB,EAAA,EAAD,CAAQE,QAAS,WAAO8B,OAAOC,SAAS,SAepD,SAAgBsD,GAIZ,IAHA,IAAIC,EAAS,GACTC,EAAa,iEACbC,EAAcD,EAAWF,OACnBI,EAAI,EAAGA,EAAIJ,EAAQI,IACzBH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAE3D,OAAOF,EAtBoDQ,CAAO,IAAK/F,QAAQ,UAAUgG,KAAK,KAAKvG,MAAS,CAAC,aAAa,OAAQ,iBAAkB,cAA5I,iBAEU,KAEd,kBAAC2B,EAAA,EAAD,CAAKC,UAAU,0BACX,kBAACtB,EAAA,EAAD,CAAQE,QAAS,WAAO8B,OAAOC,SAAS,YAAahC,QAAQ,UAAUgG,KAAK,KAAKvG,MAAS,CAAC,aAAa,OAAQ,iBAAkB,cAAlI,eAEU,KAEd,kBAAC2B,EAAA,EAAD,CAAKC,UAAU,yBAAyB5B,MAAS,CAAC,aAAa,SAC3D,uBAAGoE,KAAK,aAAR,gB,6CChBDoC,MARf,SAAgBhH,GACd,OACE,yBAAKoC,UAAU,UACb,kBAAC,IAAD,CAAI3B,MAAOT,EAAME,KAAM+G,QAAQ,QAAQC,eAAe,EAAMC,SAAS,MAAMC,MAAM,IAAKL,KAAM,IAAKM,QAAQ,YCEhG,SAASC,EAAQtH,GAAQ,IAAD,EAEHC,oBAAS,GAFN,mBAE9BsH,EAF8B,KAEnBC,EAFmB,KAI7BC,EAAc,kBAAMD,GAAa,IAGvC,OACI,oCACI,kBAACnD,EAAA,EAAD,CAAQC,GAAG,QAAQoD,kBAAgB,EAACnD,OAAO,MACvC,kBAACF,EAAA,EAAOsD,MAAR,CAAc/C,KAAK,KACf,yBACInC,IAAI,gBACJmF,OAAO,KACPxF,UAAU,2BACVyF,IAAI,eAGZ,kBAACxD,EAAA,EAAOyD,OAAR,CAAeC,gBAAc,0BAC7B,kBAAC1D,EAAA,EAAO2D,SAAR,CAAiB7C,GAAG,yBAChB,kBAAC8C,EAAA,EAAD,CAAK7F,UAAU,WACf,kBAAC6F,EAAA,EAAIC,KAAL,CAAUtD,KAAK,aAAf,SACI,kBAACqD,EAAA,EAAIC,KAAL,CAAUtD,KAAM,SAAWkC,EAAO,IAAlC,iBACA,kBAACmB,EAAA,EAAIC,KAAL,CAAUtD,KAAK,aAAf,gBAEH5E,EAAMqD,KAAO,kBAAC4E,EAAA,EAAD,KACV,kBAACnH,EAAA,EAAD,CAAQC,QAAS,oBAAqBC,QArBvC,kBAAMwG,GAAa,KAqBlB,eACK,OAGjB,kBAACW,EAAA,EAAD,CAAOC,KAAMb,EAAWc,OAAQZ,GAC5B,kBAACU,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACrB,kBAACJ,EAAA,EAAMK,MAAP,oBAEJ,kBAACL,EAAA,EAAM7F,KAAP,KACI,kBAACH,EAAA,EAAD,CAAKC,UAAU,0BACX,kBAAC,EAAD,CAAQlC,KAAQ,GAAK4C,OAAOC,YAEhC,kBAACZ,EAAA,EAAD,CAAKC,UAAU,0BACX,4BAAKpC,EAAMqD,KAAKH,MAAM,GAAGnB,MAAM,IAAI0G,KAAK,QAGhD,kBAACN,EAAA,EAAMO,OAAP,KACI,kBAAC5H,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASyG,GAArC,YAUpB,SAASX,EAAOT,GAIZ,IAHA,IAAIC,EAAS,GACTC,EAAa,iEACbC,EAAcD,EAAWF,OACnBI,EAAI,EAAGA,EAAIJ,EAAQI,IACzBH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAE3D,OAAOF,ECzDI,SAAS1D,IACpB,IAAM+F,EAAOlF,iBAAO,MACdmF,EAAOnF,iBAAO,MACdoF,EAAOpF,iBAAO,MACdqF,EAAOrF,iBAAO,MACdsF,EAAOtF,iBAAO,MACduF,EAAOvF,iBAAO,MAChBwF,EAAO,CAACN,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,GAE1CjF,qBAAU,WACN4E,EAAK9D,QAAQqE,UACd,IAIH,IAFA,IAAIC,EAAW,GAbqB,WAe3B1C,GACL0C,EAASjH,KAAK,kBAACkH,EAAA,EAAKC,MAAN,CAAY/I,GAAImE,IAAK6E,UAAW,UAAY7C,GACtD,kBAAC2C,EAAA,EAAKG,QAAN,CAAcrE,IAAK+D,EAAKxC,GAAIjG,MAAO,CAAC,OAAS,QAAQ,SAAW,OAAO,UAAY,UAAWE,SAAY,SAACC,GACjF,IAAlBA,EAAEC,OAAOH,OACLE,EAAEC,OAAOH,MAAM4F,OAAS,IACxB1F,EAAEC,OAAOH,MAAQE,EAAEC,OAAOH,MAAME,EAAEC,OAAOH,MAAM4F,OAAS,IAEzDI,EAAI,GACHwC,EAAKxC,EAAI,GAAG5B,QAAQqE,SAGpBzC,EAAI,GACJwC,EAAKxC,EAAI,GAAG5B,QAAQqE,SAIhCM,UAAa,SAAC7I,GACO,GAAbA,EAAE8I,SACEhD,EAAI,IACJ9F,EAAEC,OAAOH,MAAQ,GACjBwI,EAAKxC,EAAE,GAAG5B,QAAQqE,eApB7BzC,EAAI,EAAGA,EAAI,EAAGA,IAAO,EAArBA,GA2BT,OACI,oCACI,kBAACrC,EAAA,EAAD,CAAW5D,MAAO,CAAC,WAAa,WAC5B,kBAAC2B,EAAA,EAAD,CAAKC,UAAU,yBAAyB5B,MAAO,CAAC,iBAAkB,cAC9D,4CAEJ,kBAAC2B,EAAA,EAAD,CAAKC,UAAU,0BACX,sEAEJ,kBAACD,EAAA,EAAD,CAAKC,UAAU,0BACX,kBAACgH,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKjH,IAAN,KACKgH,GAEL,kBAACC,EAAA,EAAKjH,IAAN,CAAUC,UAAW,0BACjB,kBAACtB,EAAA,EAAD,CAAQiG,KAAM,KAAMvG,MAAO,CAAC,OAAS,QAASkJ,OAAK,EAAC1I,QAAS,WAEzD,IADA,IAAIqC,EAAO,QACHoD,EAAI,EAAGA,EAAI,EAAGA,IAClBpD,GAAQ4F,EAAKxC,GAAG5B,QAAQpE,MAET,IAAf4C,EAAKgD,SACLvD,OAAOC,SAAW,IAAMM,KANhC,aC9Db,SAASsG,IAEpB,OACI,kBAACvF,EAAA,EAAD,CAAW5D,MAAO,CAAC,cAAc,WAC7B,kBAAC2B,EAAA,EAAD,CAAKC,UAAU,yBAAyB5B,MAAO,CAAC,iBAAkB,cAC9D,gDACA,6BAAS,6BAAS,6BAAS,8BAE/B,kBAAC2B,EAAA,EAAD,CAAKC,UAAU,0BACX,sDAEJ,kBAACD,EAAA,EAAD,CAAKC,UAAU,0BACX,4BACA,2IACA,2GACA,6IACA,+HACA,8IAGJ,kBAACD,EAAA,EAAD,CAAKC,UAAU,0BACX,kBAACtB,EAAA,EAAD,CAAQE,QAAS,WAAO8B,OAAOC,SAAS,SAyBpD,SAAgBsD,GAIZ,IAHA,IAAIC,EAAS,GACTC,EAAa,iEACbC,EAAcD,EAAWF,OACnBI,EAAI,EAAGA,EAAIJ,EAAQI,IACzBH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAE3D,OAAOF,EAhCoDQ,CAAO,IAAK/F,QAAQ,UAAUgG,KAAK,KAAKvG,MAAS,CAAC,aAAa,OAAQ,iBAAkB,cAA5I,iBAEU,KAEd,kBAAC2B,EAAA,EAAD,KACI,mCAEJ,6BAAS,6BACT,kBAACA,EAAA,EAAD,CAAKC,UAAU,0BACX,oDAEJ,kBAACD,EAAA,EAAD,CAAKC,UAAU,0BACf,4BACA,mGACI,6IAGJ,kBAACD,EAAA,EAAD,CAAKC,UAAU,0BACX,kBAACtB,EAAA,EAAD,CAAQE,QAAS,WAAO8B,OAAOC,SAAS,YAAahC,QAAQ,UAAUgG,KAAK,KAAKvG,MAAS,CAAC,aAAa,OAAQ,iBAAkB,cAAlI,eAEU,MCVXoJ,MA9Bf,WAAgB,IAAD,EACyB3J,oBAAS,GADlC,mBAEP4J,GAFO,UAEA,kBAACjH,EAAD,OACPS,EAAO,GACX,OAAOP,OAAOC,SAASC,UACnB,IAAK,IACD6G,EAAO,kBAAC,EAAD,MACP,MACJ,IAAK,YACDA,EAAO,kBAAC,EAAD,MACP,MACJ,IAAK,YACDA,EAAO,kBAACF,EAAD,MACP,MACJ,QAEQtG,EADAP,OAAOC,SAASC,SAASC,WAAW,UAC7BH,OAAOC,SAASC,SAASE,MAAM,GAE/BJ,OAAOC,SAASC,SAGnC,OACI,oCACI,kBAACsE,EAAD,CAASjE,KAAMA,IACdwG,EACD,0BAAMjF,KAAK,iDAAiDkF,IAAI,iBCpBxDC,QACW,cAA7BjH,OAAOC,SAASiH,UAEe,UAA7BlH,OAAOC,SAASiH,UAEhBlH,OAAOC,SAASiH,SAASC,MACvB,2D,OCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3E,MAAK,SAAA4E,GACJA,EAAaC,gBAEdzE,OAAM,SAAA0E,GACLzE,QAAQyE,MAAMA,EAAMC,a","file":"static/js/main.21f584a7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nexport default function EntryBar(props) {\n\n    let [text, setText] = useState(\"\");\n\n    return (\n        <InputGroup>\n            <FormControl as=\"textarea\"\n                         aria-label=\"send\"\n                         style={{'resize':'none'}}\n                         value = {text}\n                         onChange = {(e) => {\n                            setText(e.target.value);\n                        }}/>\n            <InputGroup.Append>\n                <Button variant=\"info\" style={{'width':'100px'}} onClick = {() => {\n                    props.send(text);\n                    setText(\"\");\n                }}>{props.btnText}</Button>\n            </InputGroup.Append>\n        </InputGroup>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n \nclass CopyClipboard extends React.Component {\n  state = {\n    copied: false,\n  };\n \n  render() {\n    return (\n      <div>\n        <CopyToClipboard text= {this.props.text}\n          onCopy={() => this.setState({copied: true})}>\n          <button>Copy</button>\n        </CopyToClipboard>\n        {this.state.copied ? <span style={{color: 'red'}}>Copied.</span> : null}\n      </div>\n    );\n  }\n}\nexport default CopyClipboard;\n","import React  from \"react\";\n\nimport Card from 'react-bootstrap/Card'\nimport Row from \"react-bootstrap/Row\";\nimport CopyToClipboard from './CopyClipboard.js'\n\nexport default function TextCard(props) {\n    let content = []\n    props.children.split(\"\\n\").forEach((val) => {\n        content.push(<pre style={{'marginBottom':'0px'}}>{val + \"\\n\"}</pre>)\n    })\n    return (\n        <Row className={'justify-content-center'}>\n            <Card style={{'marginBottom':'10px'}}>\n                <Card.Body>\n                    {content}\n                    <CopyToClipboard text = {content[0].props.children}></CopyToClipboard>\n                </Card.Body>\n            </Card>\n        </Row>\n    );\n}\n","import React from \"react\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Card from 'react-bootstrap/Card';\nimport '../styles/imgCard.css'\n\nexport default function ImageCard(props) {\n    return (\n        <Row className={'justify-content-center'}>\n            <Card style={{'marginBottom':'10px'}}>\n                    <Card.Img variant=\"top\" src={props.img}/>\n            </Card>\n        </Row>\n    );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nimport EntryBar from \"../components/EntryBar\";\nimport Container from \"react-bootstrap/Container\"\nimport Navbar from \"react-bootstrap/Navbar\";\nimport TextCard from \"../components/TextCard\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImages } from '@fortawesome/free-solid-svg-icons'\nimport ImageCard from \"../components/ImageCard\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport '../styles/messenger.css'\n\nconst ENDPOINT = \"https://qrty-app.herokuapp.com\";\n\nexport default function MessengerPage() {\n    let startRoom = window.location.pathname;\n    if (startRoom.startsWith(\"/room/\")) {\n        startRoom = startRoom.slice(6);\n    }\n\n    const [socket, setSocket] = useState(socketIOClient(ENDPOINT));\n    let [room, setRoom] = useState(startRoom);\n    let [messages, setMessages] = useState([]);\n\n    const fileUpload = useRef(null);\n\n    function addMessage(msg) {\n        setMessages(messages.concat(\n            <TextCard>{msg}</TextCard>\n        ));\n    }\n\n    function addImage(url) {\n        setMessages(messages.concat(\n           <ImageCard img={url}/>\n        ));\n    }\n\n    useEffect(() => {\n        socket.emit(\"join room\", room);\n\n        return () => socket.disconnect();\n    }, []);\n\n    useEffect(() => {\n        socket.on('textMessage', addMessage);\n        return () => socket.removeListener('textMessage', addMessage)\n    },[messages]);\n\n    useEffect(() => {\n        socket.on('imgMessage', addImage);\n        return () => socket.removeListener('imgMessage', addImage);\n    })\n\n    return (\n        <>\n            <Container>\n                <hr style={{'opacity':'0'}}/>\n                {messages}\n                <hr style={{'opacity':'0','marginTop':'78px'}}/>\n                <Navbar bg=\"light\" expand=\"lg\" fixed={\"bottom\"}>\n                    <Container>\n                        <Row className={\"justify-content-center\"} style={{'width':'100%'}}>\n                            <Col sm={3}/>\n                            <Col sm={5} xs={10}>\n                                <EntryBar btnText={\"Send\"} send={(text) => {\n                                    addMessage(text);\n                                    socket.emit(\"textMessage\", {text: text, room: room});\n                                }}/>\n                            </Col>\n                            <Col sm={4} xs={2} className={\"img-upload-icon\"} style={{'marginTop':'8px', 'marginLeft':'-25px'}}>\n                                <h1>\n                                    <a href={\"#\"} style={{'color':\"#148496\", 'marginLeft':'15px'}} onClick={()=> {\n                                        fileUpload.current.click();\n                                    }}>\n                                        <FontAwesomeIcon icon={faImages}/>\n                                    </a>\n                                </h1>\n                            </Col>\n                        </Row>\n\n                    </Container>\n                </Navbar>\n            </Container>\n            <input hidden ref={fileUpload} id=\"image-file\" type=\"file\" accept={\"image/*\"} onChange={(e)=> {\n                if (e.target.value) {\n                    let formData = new FormData();\n                    let image = fileUpload.current.files[0];\n\n                    formData.append(\"file\", image);\n\n                    try {\n                        fetch(ENDPOINT + '/uploads', {method: \"POST\", body: formData})\n                            .then(blob => blob.json())\n                            .then(data => {\n                                addImage(data.data);\n                                socket.emit(\"imgMessage\", {img: data.data, room: room});\n                            }).catch(e => {\n                                console.log(e);\n                            return e;\n                        });\n                    } catch(e) {\n                        console.log('Error in image upload...:', e);\n                    }\n                }\n            }}/>\n        </>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\n\nexport default function MessengerPage() {\n\n    return (\n        <Container style={{'font-family':'Oswald'}}>\n            <Row className=\"justify-content-center\" style={{'text-transform': 'uppercase'}}>\n                <h1>Welcome to QRty</h1>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <p>Easily share content between multiple devices</p>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <Button onClick={() => {window.location='/room/' + makeID(6)}} variant=\"primary\" size=\"lg\" style = {{'margin-top':'20px', 'text-transform': 'uppercase'}}>\n                    Create a Room\n                </Button>{' '}\n            </Row>\n            <Row className=\"justify-content-center\">\n                <Button onClick={() => {window.location=\"joinroom\"}} variant=\"primary\" size=\"lg\" style = {{'margin-top':'40px', 'text-transform': 'uppercase'}}>\n                    Join a Room\n                </Button>{' '}\n            </Row>\n            <Row className=\"justify-content-center\" style = {{'margin-top':'40px'}}>\n                <a href=\"/infopage\">About QRty</a>\n            </Row>\n        </Container>\n    );\n\n    function makeID(length) {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charsLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n            result += characters.charAt(Math.floor(Math.random() * charsLength));\n        }\n        return result;\n    }\n}\n","import React from 'react';\nimport QR from 'qrcode.react'\n\nfunction QRCode(props) {\n  return (\n    <div className=\"QRCode\">\n      <QR value={props.text} fgColor=\"black\" includeMargin={true} renderAs=\"svg\" level=\"H\"  size={150} bgColor=\"white\"/>\n    </div>\n  );\n}\n\nexport default QRCode;\n","import React, { useEffect, useState } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport QRCode from \"./QRCode\";\nimport Row from \"react-bootstrap/Row\";\n\nexport default function QRtyNav(props) {\n\n    let [showPopup, setShowPopup] = useState(false);\n\n    const handleClose = () => setShowPopup(false);\n    const handleShow = () => setShowPopup(true);\n\n    return (\n        <>\n            <Navbar bg=\"light\" collapseOnSelect expand=\"sm\">\n                <Navbar.Brand href=\"/\">\n                    <img\n                        src=\"/QRtyLogo.png\"\n                        height=\"40\"\n                        className=\"d-inline-block align-top\"\n                        alt=\"QRty logo\"\n                    />\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/infopage\">About</Nav.Link>\n                        <Nav.Link href={\"/room/\" + makeID(6)}>Create a Room</Nav.Link>\n                        <Nav.Link href=\"/joinroom\">Join a Room</Nav.Link>\n                    </Nav>\n                    {props.room ? <Nav>\n                        <Button variant={\"outline-secondary\"} onClick={handleShow}>Add Device</Button>\n                    </Nav> : null}\n                </Navbar.Collapse>\n            </Navbar>\n            <Modal show={showPopup} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Device</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Row className=\"justify-content-center\">\n                        <QRCode text = {\"\" + window.location}></QRCode>\n                    </Row>\n                    <Row className=\"justify-content-center\">\n                        <h2>{props.room.slice(0).split(\"\").join(\" \")}</h2>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\n// TODO: DON'T REPEAT FUNCTION!!!\nfunction makeID(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charsLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charsLength));\n    }\n    return result;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport QRtyNav from \"../components/QRtyNav\";\n\nexport default function MessengerPage() {\n    const txt0 = useRef(null);\n    const txt1 = useRef(null);\n    const txt2 = useRef(null);\n    const txt3 = useRef(null);\n    const txt4 = useRef(null);\n    const txt5 = useRef(null);\n    let refs = [txt0, txt1, txt2, txt3, txt4, txt5];\n\n    useEffect(() => {\n        txt0.current.focus();\n    }, []);\n\n    let roomCode = [];\n\n    for (let i = 0; i < 6; i ++) {\n        roomCode.push(<Form.Group as={Col} controlId={\"roomID-\" + i}>\n            <Form.Control ref={refs[i]} style={{'height':'150px','fontSize':'60px','textAlign':'center'}} onChange = {(e) => {\n                if (e.target.value != \"\") {\n                    if (e.target.value.length > 1) {\n                        e.target.value = e.target.value[e.target.value.length - 1];\n                    }\n                    if(i < 5) {\n                        refs[i + 1].current.focus();\n                    }\n                } else {\n                    if (i > 0) {\n                        refs[i - 1].current.focus();\n                    }\n                }\n            }}\n            onKeyDown = {(e) => {\n                if (e.keyCode == 8) {\n                    if (i > 0){\n                        e.target.value = \"\";\n                        refs[i-1].current.focus();\n                    }\n                }\n            }}/>\n        </Form.Group>);\n    }\n\n    return (\n        <>\n            <Container style={{'fontFamily':'Oswald'}}>\n                <Row className=\"justify-content-center\" style={{'text-transform': 'uppercase'}}>\n                    <h1>Join a Room</h1>\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <p>Enter the 6-character room code below:</p>\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <Form>\n                        <Form.Row>\n                            {roomCode}\n                        </Form.Row>\n                        <Form.Row className={\"justify-content-center\"}>\n                            <Button size={\"lg\"} style={{\"height\":\"50px\"}} block onClick={()=> {\n                                let room = \"room/\";\n                                for(let i = 0; i < 6; i ++) {\n                                    room += refs[i].current.value;\n                                }\n                                if (room.length == 11) {\n                                    window.location = \"/\" + room;\n                                }\n                            }}>Join</Button>\n                        </Form.Row>\n                    </Form>\n                </Row>\n            </Container>\n        </>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\n\nexport default function InstructionPage() {\n\n    return (\n        <Container style={{'font-family':'Oswald'}}>\n            <Row className=\"justify-content-center\" style={{'text-transform': 'uppercase'}}>\n                <h1>Welcome to QRty!</h1>\n                <br></br><br></br><br></br><br></br>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <h4>How to Create a Room:</h4>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <ul>\n                <li>When you click the Create a Room button you will have created a private room to store your text and images.</li>\n                <li>You can invite friends to your room with the 6 digits at the end of the URL</li>\n                <li>If you click the Add Device button in the upper right hand corner, you will see a QR code and your room code </li>\n                <li>You can scan this QR code on mobile devices and then view your text and images across platforms</li>\n                <li>You can also upload images or text from that new device and it will appear on other devices in the same room</li>\n                </ul>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <Button onClick={() => {window.location='/room/' + makeID(6)}} variant=\"primary\" size=\"lg\" style = {{'margin-top':'20px', 'text-transform': 'uppercase'}}>\n                    Create a Room\n                </Button>{' '}\n            </Row>\n            <Row>\n                <p>   </p>\n            </Row>\n            <br></br><br></br>\n            <Row className=\"justify-content-center\">\n                <h4>How to Join a Room:</h4>\n            </Row>\n            <Row className=\"justify-content-center\">\n            <ul>\n            <li>To join a room you will need either the 6-digit code or the QR code</li>\n                <li>After clicking the Join a Room button, simply enter the code and you will see live updates across platforms</li>\n                </ul>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <Button onClick={() => {window.location=\"joinroom\"}} variant=\"primary\" size=\"lg\" style = {{'margin-top':'40px', 'text-transform': 'uppercase'}}>\n                    Join a Room\n                </Button>{' '}\n            </Row>\n        </Container>\n    );\n\n    function makeID(length) {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charsLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n            result += characters.charAt(Math.floor(Math.random() * charsLength));\n        }\n        return result;\n    }\n}","import React, { useState } from \"react\";\nimport MessengerPage from \"./layouts/MessengerPage\";\nimport HomePage from \"./layouts/HomePage\";\nimport JoinRoomPage from \"./layouts/JoinRoomPage\";\nimport InstructionPage from \"./layouts/InstructionPage\";\nimport QRtyNav from \"./components/QRtyNav\";\n\nfunction App() {\n    const [loadClient, setLoadClient] = useState(true);\n    let page = <MessengerPage/>;\n    let room = \"\";\n    switch(window.location.pathname) {\n        case \"/\" :\n            page = <HomePage/>;\n            break;\n        case \"/joinroom\":\n            page = <JoinRoomPage/>;\n            break;\n        case \"/infopage\":\n            page = <InstructionPage/>\n            break;\n        default:\n            if (window.location.pathname.startsWith(\"/room/\")) {\n                room = window.location.pathname.slice(6);\n            } else {\n                room = window.location.pathname;\n            }\n    }\n    return (\n        <>\n            <QRtyNav room={room}/>\n            {page}\n            <link href=\"https://fonts.googleapis.com/css?family=Oswald\" rel=\"stylesheet\"/>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}